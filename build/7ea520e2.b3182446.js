(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{114:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),m=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=m(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},s=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=m(n),s=r,b=d["".concat(c,".").concat(s)]||d[s]||p[s]||a;return n?o.a.createElement(b,i(i({ref:t},u),{},{components:n})):o.a.createElement(b,i({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=s;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var u=2;u<a;u++)c[u]=n[u];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return d}));var r=n(3),o=n(7),a=(n(0),n(114)),c=["components"],i={id:"darkmode",title:"Dark mode",sidebar_label:"Dark mode"},l={unversionedId:"darkmode",id:"darkmode",isDocsHomePage:!1,title:"Dark mode",description:"Default Theme",source:"@site/docs\\darkmode.md",slug:"/darkmode",permalink:"/docs/darkmode",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/darkmode.md",version:"current",sidebar_label:"Dark mode",sidebar:"someSidebar",previous:{title:"Colors",permalink:"/docs/themeColors"},next:{title:"Layout",permalink:"/docs/layout"}},u=[{value:"Default Theme",id:"default-theme",children:[]},{value:"Control theme",id:"control-theme",children:[]},{value:"Check current theme",id:"check-current-theme",children:[]}],m={toc:u};function d(e){var t=e.components,n=Object(o.a)(e,c);return Object(a.b)("wrapper",Object(r.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"default-theme"},"Default Theme"),Object(a.b)("p",null,"Once you set ",Object(a.b)("inlineCode",{parentName:"p"},"ThemeProvider")," the default theme is a ",Object(a.b)("inlineCode",{parentName:"p"},"light")," theme, you can set your default theme on your ",Object(a.b)("inlineCode",{parentName:"p"},"ThemeProvider")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},'import { ThemeProvider } from "react-native-rapi-ui";\n\nconst App = () => {\n  return (\n    <ThemeProvider theme="dark">\n      <Navigator />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n')),Object(a.b)("h2",{id:"control-theme"},"Control theme"),Object(a.b)("p",null,"You can change your theme using ",Object(a.b)("inlineCode",{parentName:"p"},"useTheme()")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},'import { useTheme } from "react-native-rapi-ui";\n\nconst HomeScreen = () => {\n  const { setTheme } = useTheme();\n  return <Button onClick={() => setTheme("dark")}>change to dark mode</Button>;\n};\n\nexport default HomeScreen;\n')),Object(a.b)("h2",{id:"check-current-theme"},"Check current theme"),Object(a.b)("p",null,"You can check your theme using these two ways, using ",Object(a.b)("inlineCode",{parentName:"p"},"theme")," and ",Object(a.b)("inlineCode",{parentName:"p"},"isDarkmode")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},"import { useTheme } from \"react-native-rapi-ui\";\n\nconst HomeScreen = () => {\n  const { theme, isDarkmode } = useTheme();\n  console.log(theme); // print out 'light' or 'dark'\n  console.log(isDarkmode); // print out a boolean value checking is the current theme is 'dark' or not\n};\n")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"theme")," return a string value between ",Object(a.b)("inlineCode",{parentName:"li"},"light")," or ",Object(a.b)("inlineCode",{parentName:"li"},"dark")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"isDarkmode")," return a boolean value")))}d.isMDXComponent=!0}}]);