(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{107:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return b})),r.d(t,"toc",(function(){return p})),r.d(t,"default",(function(){return d}));var n=r(3),a=r(7),o=(r(0),r(114)),i=["components"],c={id:"themeProvider",title:"ThemeProvider",sidebar_label:"ThemeProvider"},b={unversionedId:"themeProvider",id:"themeProvider",isDocsHomePage:!1,title:"ThemeProvider",description:"In version 0.2 all you need to do is use the ThemeProvider to wrap your application to control the theme, because Rapi UI now have dark mode!",source:"@site/docs\\themeProvider.md",slug:"/themeProvider",permalink:"/docs/themeProvider",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/themeProvider.md",version:"current",sidebar_label:"ThemeProvider",sidebar:"someSidebar",previous:{title:"Upgrading from 0.1.x to 0.2.x",permalink:"/docs/upgrading02"},next:{title:"Colors",permalink:"/docs/themeColors"}},p=[{value:"Usage",id:"usage",children:[{value:"Caching Images and fonts",id:"caching-images-and-fonts",children:[]},{value:"Properties",id:"properties",children:[]}]},{value:"Properties",id:"properties-1",children:[]}],l={toc:p};function d(e){var t=e.components,r=Object(a.a)(e,i);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"In version 0.2 all you need to do is use the ",Object(o.b)("inlineCode",{parentName:"p"},"ThemeProvider")," to wrap your application to control the theme, because Rapi UI now have dark mode!"),Object(o.b)("p",null,"This component will preload the Ubuntu Fonts and ",Object(o.b)("inlineCode",{parentName:"p"},"@expo/vector-icons")," put this in your App.js or your root component, and will return a ",Object(o.b)("inlineCode",{parentName:"p"},"boolean")," to tell you if your assets are ready or not."),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"Note: this component already have ",Object(o.b)("inlineCode",{parentName:"p"},"<SafeAreaProvider/>")," wrapper"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},'import { ThemeProvider } from "react-native-rapi-ui";\n\nconst App = () => {\n  return (\n    <ThemeProvider>\n      <Navigator />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n')),Object(o.b)("h3",{id:"caching-images-and-fonts"},"Caching Images and fonts"),Object(o.b)("p",null,"Assets are cached differently depending on where they're stored and how they're used. This guide offers best practices for making sure you only download assets when you need to. In order to keep the loading screen visible while caching assets, it's also a good idea to render ",Object(o.b)("inlineCode",{parentName:"p"},"AppLoading")," and only that component until everything is ready. the ",Object(o.b)("inlineCode",{parentName:"p"},"loading")," prop will render a custom loading if you fill it."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},'const images = [require("./assets/logo"), require("./assets/headerImage")];\nconst fonts = {\n  otherFont1: require("../fonts/otherFont1.ttf"),\n  otherFont2: require("../fonts/otherFont2.ttf"),\n  otherFont3: require("../fonts/otherFont3.ttf"),\n};\n\n<ThemeProvider\n  theme="light"\n  images={images}\n  fonts={fonts}\n  loading={<AppLoading />}\n>\n  <Navigator />\n</ThemeProvider>;\n')),Object(o.b)("h3",{id:"properties"},"Properties"),Object(o.b)("h2",{id:"properties-1"},"Properties"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:"center"},"props"),Object(o.b)("th",{parentName:"tr",align:"center"},"required"),Object(o.b)("th",{parentName:"tr",align:"center"},"value"),Object(o.b)("th",{parentName:"tr",align:null},"Default Value"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"center"},Object(o.b)("strong",{parentName:"td"},Object(o.b)("a",{parentName:"strong",href:"https://reactnative.dev/docs/view#props"},"ViewProps"))),Object(o.b)("td",{parentName:"tr",align:"center"}),Object(o.b)("td",{parentName:"tr",align:"center"}),Object(o.b)("td",{parentName:"tr",align:null})),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"center"},Object(o.b)("strong",{parentName:"td"},"theme")),Object(o.b)("td",{parentName:"tr",align:"center"},"No"),Object(o.b)("td",{parentName:"tr",align:"center"},Object(o.b)("inlineCode",{parentName:"td"},"light"),"/ ",Object(o.b)("inlineCode",{parentName:"td"},"dark")),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"light"))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"center"},Object(o.b)("strong",{parentName:"td"},"setTheme")),Object(o.b)("td",{parentName:"tr",align:"center"},"Yes"),Object(o.b)("td",{parentName:"tr",align:"center"},Object(o.b)("inlineCode",{parentName:"td"},"setTheme")),Object(o.b)("td",{parentName:"tr",align:null})),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"center"},Object(o.b)("strong",{parentName:"td"},"images")),Object(o.b)("td",{parentName:"tr",align:"center"},"No"),Object(o.b)("td",{parentName:"tr",align:"center"},"[image,image...]"),Object(o.b)("td",{parentName:"tr",align:null})),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"center"},Object(o.b)("strong",{parentName:"td"},"fonts")),Object(o.b)("td",{parentName:"tr",align:"center"},"No"),Object(o.b)("td",{parentName:"tr",align:"center"},"{font, font...}"),Object(o.b)("td",{parentName:"tr",align:null})),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:"center"},Object(o.b)("strong",{parentName:"td"},"loading")),Object(o.b)("td",{parentName:"tr",align:"center"},"No"),Object(o.b)("td",{parentName:"tr",align:"center"},Object(o.b)("inlineCode",{parentName:"td"},"React.ReactNode")),Object(o.b)("td",{parentName:"tr",align:null},"null")))))}d.isMDXComponent=!0},114:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return u}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function b(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},d=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,p=b(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,u=d["".concat(i,".").concat(m)]||d[m]||s[m]||o;return r?a.a.createElement(u,c(c({ref:t},p),{},{components:r})):a.a.createElement(u,c({ref:t},p))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var p=2;p<o;p++)i[p]=r[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);