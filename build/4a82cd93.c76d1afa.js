(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{111:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,b=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,u=d["".concat(b,".").concat(m)]||d[m]||s[m]||c;return n?a.a.createElement(u,o(o({ref:t},l),{},{components:n})):a.a.createElement(u,o({ref:t},l))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,b=new Array(c);b[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,b[1]=o;for(var l=2;l<c;l++)b[l]=n[l];return a.a.createElement.apply(null,b)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},162:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/checkbox-f804a39bb144fad807a57b5820492ef4.png"},163:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/truecheckbox-1646feface294eb50cd985c01dbf2f68.png"},80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),c=(n(0),n(111)),b={id:"checkbox",title:"CheckBox",sidebar_label:"CheckBox"},o={unversionedId:"checkbox",id:"checkbox",isDocsHomePage:!1,title:"CheckBox",description:"Checkbox is a selection of a true or false",source:"@site/docs\\checkbox.md",slug:"/checkbox",permalink:"/docs/checkbox",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/checkbox.md",version:"current",sidebar_label:"CheckBox",sidebar:"someSidebar",previous:{title:"TextInput",permalink:"/docs/text-input"},next:{title:"RadioButton",permalink:"/docs/radio-button"}},i=[{value:"Usage",id:"usage",children:[{value:"Simple Usage",id:"simple-usage",children:[]}]},{value:"Properties",id:"properties",children:[]}],l={toc:i};function p(e){var t=e.components,b=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,b,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Checkbox is a selection of a ",Object(c.b)("inlineCode",{parentName:"p"},"true")," or ",Object(c.b)("inlineCode",{parentName:"p"},"false")),Object(c.b)("h2",{id:"usage"},"Usage"),Object(c.b)("h3",{id:"simple-usage"},"Simple Usage"),Object(c.b)("p",null,Object(c.b)("img",{alt:"checkbox",src:n(162).default}),"\n",Object(c.b)("img",{alt:"truecheckbox",src:n(163).default})),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-jsx"},"import { View } from 'react-native';\nimport { CheckBox, Text } from 'react-native-rapi-ui';\n\nconst Forms = () => {\n    const [checkBox, setCheckbox] = React.useState(false);\n    return (\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n            <Text style={{ marginBottom: 10 }}>TextInput</Text>\n            <CheckBox value={checkBox} onValueChange={(val) => setCheckbox(val)} />\n            <Text size=\"md\" style={{ marginLeft: 10, color: 'gray' }}>\n                I agree with the Terms & Conditions\n            </Text>\n        </View>\n    );\n};\n\nexport default Forms;\n")),Object(c.b)("h2",{id:"properties"},"Properties"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:"center"},"props"),Object(c.b)("th",{parentName:"tr",align:"center"},"required"),Object(c.b)("th",{parentName:"tr",align:"center"},"value"),Object(c.b)("th",{parentName:"tr",align:null},"Default Value"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("strong",{parentName:"td"},"value")),Object(c.b)("td",{parentName:"tr",align:"center"},"Yes"),Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("inlineCode",{parentName:"td"},"boolean")),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"false"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("strong",{parentName:"td"},"onValueChange")),Object(c.b)("td",{parentName:"tr",align:"center"},"Yes"),Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("inlineCode",{parentName:"td"},"(newValue: boolean) => void")),Object(c.b)("td",{parentName:"tr",align:null})),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("strong",{parentName:"td"},"size")),Object(c.b)("td",{parentName:"tr",align:"center"},"No"),Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("inlineCode",{parentName:"td"},"number")),Object(c.b)("td",{parentName:"tr",align:null},"24")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("strong",{parentName:"td"},"checkedColor")),Object(c.b)("td",{parentName:"tr",align:"center"},"No"),Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",{parentName:"tr",align:null},"#3366FF")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("strong",{parentName:"td"},"unCheckedColor")),Object(c.b)("td",{parentName:"tr",align:"center"},"No"),Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",{parentName:"tr",align:null},"#d8d8d8")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("strong",{parentName:"td"},"inverseColor")),Object(c.b)("td",{parentName:"tr",align:"center"},"No"),Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("inlineCode",{parentName:"td"},"string")),Object(c.b)("td",{parentName:"tr",align:null},"#FFFFFF")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("strong",{parentName:"td"},"disabled")),Object(c.b)("td",{parentName:"tr",align:"center"},"No"),Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("inlineCode",{parentName:"td"},"boolean")),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"false"))),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("strong",{parentName:"td"},"style")),Object(c.b)("td",{parentName:"tr",align:"center"},"No"),Object(c.b)("td",{parentName:"tr",align:"center"},Object(c.b)("a",{parentName:"td",href:"https://reactnative.dev/docs/view-style-props#props"},"ViewStyle")),Object(c.b)("td",{parentName:"tr",align:null})))))}p.isMDXComponent=!0}}]);